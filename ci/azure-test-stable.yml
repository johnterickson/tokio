jobs:
- job: ${{ parameters.name }}
  displayName: ${{ parameters.displayName }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  steps:
  - template: azure-install-rust.yml
    parameters:
      platform: ${{parameters.name}}
      rust_version: stable
  - bash: |
      export CI=True
      cargo test --all -- -Z unstable-options --format json | tee ./results.json
    env:
      LOOM_MAX_DURATION: 10
  - bash: |
      ls -l ./results.json
      cargo install cargo2junit
      cat ./results.json
      cat ./results.json | cargo2junit
      cat ./results.json | cargo2junit > ./results.xml
    condition: succeededOrFailed()
  - task: PublishTestResults@2
    inputs: 
      testResultsFormat: 'JUnit'
      testResultsFiles: 'results.xml'
    condition: succeededOrFailed()
